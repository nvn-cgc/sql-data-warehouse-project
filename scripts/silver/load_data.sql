--In this layer, we are transform data from bronze layer and insert updated data into silver layer

--DATAWAREHOUSE.SILVER.CRM_CUST_INFO - 1
INSERT INTO DATAWAREHOUSE.SILVER.CRM_CUST_INFO
SELECT CST_ID
      ,CST_KEY
      ,TRIM(CST_FIRSTNAME) AS CST_FIRSTNAME
      ,TRIM(CST_LASTNAME) AS CST_LASTNAME
      ,CASE WHEN UPPER(TRIM(CST_MATERIAL_STATUS)) = 'M' THEN 'MARRIED'
            WHEN UPPER(TRIM(CST_MATERIAL_STATUS)) = 'S' THEN 'SINGLED'
            ELSE 'NOT AVAILABLE'
       END CST_MATERIAL_STATUS
      ,CASE WHEN UPPER(TRIM(CST_GNDR)) = 'F' THEN 'FEMALE'
            WHEN UPPER(TRIM(CST_GNDR)) = 'M' THEN 'MALE'
            ELSE 'NOT AVAILABLE'
       END CST_GNDR
      ,CST_CREATE_DATE
      FROM(
    SELECT *
          ,ROW_NUMBER() OVER(PARTITION BY CST_ID ORDER BY CST_CREATE_DATE DESC) AS FLAG
    FROM DATAWAREHOUSE.BRONZE.CRM_CUST_INFO
    WHERE CST_ID IS NOT NULL
)T WHERE FLAG = 1;

SELECT * FROM DATAWAREHOUSE.SILVER.CRM_CUST_INFO;


-- DATAWAREHOUSE.SILVER.CRM_PRD_INFO - 2
INSERT INTO DATAWAREHOUSE.SILVER.CRM_PRD_INFO
SELECT PRD_ID
      ,REPLACE(SUBSTRING(PRD_KEY,1,5),'-','_') AS CAT_ID
      ,PRD_KEY
      ,SUBSTRING(PRD_KEY, 7,LENGTH(PRD_KEY)) AS PRD_KEY1
      ,PRD_NM
      ,IFNULL(PRD_COST, 0) AS PRD_COST
      ,CASE
        WHEN PRD_LINE = 'R' THEN 'Retail or Repairs& '
        WHEN PRD_LINE = 'M' THEN 'Maintenance or Manufacturing'
        WHEN PRD_LINE = 'S' THEN 'Software'
        ELSE 'Technology or Tools'
       END AS PRD_LINE
      ,CAST(PRD_START_DT AS DATE) AS PRD_START_DT
     -- ,CAST(PRD_END_DT AS DATE) AS PRD_END_DT
      ,CAST(DATEADD(DAY, -1, LEAD(PRD_END_DT) OVER(PARTITION BY PRD_KEY ORDER BY PRD_START_DT)) AS DATE) AS PRD_END_DT_LATTEST
      FROM DATAWAREHOUSE.BRONZE.CRM_PRD_INFO;

SELECT * FROM DATAWAREHOUSE.BRONZE.CRM_SALES_DETAILS
WHERE SLS_PRD_KEY NOT IN (SELECT PRD_KEY1 FROM DATAWAREHOUSE.SILVER.CRM_PRD_INFO);


SELECT * FROM DATAWAREHOUSE.SILVER.CRM_PRD_INFO;

--DATAWAREHOUSE.SILVER.CRM_SALES_DETAILS - 3
INSERT INTO DATAWAREHOUSE.SILVER.CRM_SALES_DETAILS
SELECT SLS_ORD_NUM
      ,SLS_PRD_KEY
      ,SLS_CUST_ID
      ,CASE WHEN SLS_ORDER_DT = 0 OR LEN(SLS_ORDER_DT) != 8 THEN NULL
            ELSE CAST(CAST(SLS_ORDER_DT AS VARCHAR) AS DATE)
       END AS SLS_ORDER_DT
      ,CAST(CAST(SLS_SHIP_DT AS VARCHAR) AS DATE) AS SLS_SHIP_DT
      ,CAST(CAST(SLS_DUE_DT AS VARCHAR) AS DATE) AS SLS_DUE_DT
      ,CASE WHEN SLS_SALES IS NULL OR SLS_SALES <=0 OR SLS_SALES != SLS_QUANTITY * ABS(SLS_PRICE) THEN SLS_QUANTITY*ABS(SLS_PRICE)
            ELSE SLS_SALES
       END AS SLS_SALES
      ,SLS_QUANTITY
      ,CASE WHEN SLS_PRICE IS NULL OR SLS_PRICE <= 0 THEN SLS_PRICE / NULLIF(SLS_PRICE, 0)
            ELSE SLS_PRICE 
      END AS SLS_PRICE
FROM DATAWAREHOUSE.BRONZE.CRM_SALES_DETAILS;

SELECT * FROM DATAWAREHOUSE.SILVER.CRM_SALES_DETAILS;


--DATAWAREHOUSE.SILVER.ERP_CUST_AZ12 - 4
INSERT INTO DATAWAREHOUSE.SILVER.ERP_CUST_AZ12
SELECT CASE WHEN CID LIKE 'NAS%' THEN SUBSTR(CID,4)
            ELSE CID
       END AS CID_NEW
       ,CASE WHEN DATE > CURRENT_DATE() THEN NULL
             ELSE DATE
        END AS DATE
       ,CASE WHEN GEN = 'M' OR GEN ='M ' THEN 'Male'
             WHEN GEN = 'F' OR GEN = 'F 'THEN 'Female'
             WHEN GEN IS NULL THEN 'N/A'
             WHEN GEN = ' ' OR GEN = '  ' THEN 'N/A'
             ELSE GEN             
        END AS GEN
FROM DATAWAREHOUSE.BRONZE.ERP_CUST_AZ12;

SELECT * FROM DATAWAREHOUSE.SILVER.ERP_CUST_AZ12;


--DATAWAREHOUSE.SILVER.ERP_LOC_A101 - 5
INSERT INTO DATAWAREHOUSE.SILVER.ERP_LOC_A101
SELECT REPLACE(CID,'-','') AS CID
      ,CASE WHEN CNTRY IS NULL OR CNTRY =' ' OR CNTRY = '  ' OR CNTRY = ' ' OR CNTRY = '   ' THEN 'N/A'
            WHEN TRIM(CNTRY) = 'DE' THEN 'GERMANY'
            WHEN TRIM(CNTRY) IN ('US', 'USA') THEN 'United States'
            WHEN TRIM(CNTRY) ='Germany' THEN 'GERMANY'
            ELSE CNTRY
       END AS CNTRY
FROM DATAWAREHOUSE.BRONZE.ERP_LOC_A101;

SELECT * FROM DATAWAREHOUSE.SILVER.ERP_LOC_A101;

--DATAWAREHOUSE.SILVER.ERP_PX_CAT_G1V2 - 6
INSERT INTO DATAWAREHOUSE.SILVER.ERP_PX_CAT_G1V2
SELECT ID
      ,CAT
      ,SUBCAT
      ,MAINTENANCE
FROM DATAWAREHOUSE.BRONZE.ERP_PX_CAT_G1V2;

SELECT * FROM DATAWAREHOUSE.SILVER.ERP_PX_CAT_G1V2;


